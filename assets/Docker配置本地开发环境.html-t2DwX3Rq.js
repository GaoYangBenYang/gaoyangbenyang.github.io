import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as n,e}from"./app-R7KjGRAy.js";const l={},i=e(`<h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><ol><li>拉取官方镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull mysql       <span class="token comment"># 拉取最新版mysql镜像</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建主机挂载文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建目录 -p 递归创建</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/gaoyang/docker/mysql/<span class="token punctuation">{</span>conf,logs,data<span class="token punctuation">}</span>
<span class="token comment"># 创建文件</span>
<span class="token function">touch</span> /home/gaoyang/docker/mysql/conf/my.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>创建容器</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run                                                  <span class="token comment">#创建一个新的容器,同时运行这个容器</span>
<span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306                                                <span class="token comment">#指定端口映射，格式为：主机(宿主)端口:容器端口</span>
<span class="token parameter variable">--name</span> mysql                                                <span class="token comment">#为容器指定一个名称</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span>                               <span class="token comment">#设置环境变量 root账户密码</span>
<span class="token parameter variable">-v</span> /home/gaoyang/docker/mysql/conf/my.cnf:/etc/mysql/my.cnf <span class="token comment">#将配置文件夹挂载到主机</span>
<span class="token parameter variable">-v</span> /home/gaoyang/docker/mysql/logs:/var/log/mysql           <span class="token comment">#将日志文件夹挂载到主机</span>
<span class="token parameter variable">-v</span> /home/gaoyang/docker/mysql/data:/var/lib/mysql           <span class="token comment">#将mysql储存文件夹挂载到主机</span>
<span class="token parameter variable">-d</span> mysql:latest                                             <span class="token comment">#后台运行容器，并返回容器ID                                          </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>检查容器是否正确运行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><ol><li>拉取官方镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull redis       <span class="token comment"># 拉取最新版redis镜像</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建主机挂载文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建目录 -p 递归创建</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/gaoyang/docker/redis/<span class="token punctuation">{</span>conf,data<span class="token punctuation">}</span>
<span class="token comment"># 创建文件</span>
<span class="token function">touch</span> /home/gaoyang/docker/redis/conf/redis.cnf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>创建容器(命令省略了换行符 \\ )</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run 
<span class="token parameter variable">--name</span> redis 
<span class="token parameter variable">-p</span> <span class="token number">6379</span>:6379 
<span class="token parameter variable">-v</span> /home/gaoyang/docker/redis/data:/data 
<span class="token parameter variable">-v</span> /home/gaoyang/docker/redis/conf/redis.conf:/etc/redis/redis.conf 
redis-server /etc/redis/redis.conf <span class="token comment">#Redis 容器中设置 redis-server 每次启动读取 /etc/redis/redis.conf 这个配置为准</span>
<span class="token parameter variable">-d</span> redis:latest   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>检查容器是否正确运行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="rabbitmq" tabindex="-1"><a class="header-anchor" href="#rabbitmq" aria-hidden="true">#</a> RabbitMQ</h2><ol><li>拉取官方镜像(包含web控制界面的)</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull rabbitmq:3.9.29-management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建主机挂载文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建目录 -p 递归创建</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/gaoyang/docker/rabbitmq/<span class="token punctuation">{</span>data,conf,log<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>修改log目录权限</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token number">777</span> /home/gaoyang/docker/rabbitmq
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>创建容器(命令省略了换行符 \\ )</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run 
<span class="token parameter variable">--name</span> rabbitmq 
<span class="token parameter variable">-p</span> <span class="token number">5672</span>:5672 
<span class="token parameter variable">-p</span> <span class="token number">15672</span>:15672
<span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_USER</span><span class="token operator">=</span>admin  <span class="token comment">#控制面板账号</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">RABBITMQ_DEFAULT_PASS</span><span class="token operator">=</span>admin  <span class="token comment">#控制面板密码</span>
<span class="token parameter variable">-v</span> /home/gaoyang/docker/rabbitmq/data:/var/lib/rabbitmq
<span class="token parameter variable">-v</span> /home/gaoyang/docker/rabbitmq/conf:/etc/rabbitmq
<span class="token parameter variable">-v</span> /home/gaoyang/docker/rabbitmq/log:/var/log/rabbitmq
<span class="token parameter variable">-d</span> rabbitmq:3.9.29-management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>开启web控制台</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> rabbitmq <span class="token function">bash</span>
rabbitmq-plugins <span class="token builtin class-name">enable</span> rabbitmq_management
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>检查容器是否正确运行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="nacos" tabindex="-1"><a class="header-anchor" href="#nacos" aria-hidden="true">#</a> Nacos</h2><ol><li>拉取官方镜像</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull nacos/nacos-server       <span class="token comment"># 拉取最新版镜像</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建主机挂载文件（开发环境可不挂载）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建目录 -p 递归创建</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /home/gaoyang/docker/nacos/<span class="token punctuation">{</span>conf,logs<span class="token punctuation">}</span>
<span class="token comment"># 创建文件</span>
<span class="token function">touch</span> /home/gaoyang/docker/nacos/conf/application.properties
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>创建容器</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run 
<span class="token parameter variable">--name</span> nacos 
<span class="token parameter variable">-p</span> <span class="token number">7848</span>:7848 
<span class="token parameter variable">-p</span> <span class="token number">8848</span>:8848 
<span class="token parameter variable">-p</span> <span class="token number">9848</span>:9848 
<span class="token comment">#-e SPRING_DATASOURCE_PLATFORM=mysql </span>
<span class="token comment">#-e MYSQL_SERVICE_HOST=localhost </span>
<span class="token comment">#-e MYSQL_SERVICE_PORT=3306 </span>
<span class="token comment">#-e MYSQL_SERVICE_USER=root </span>
<span class="token comment">#-e MYSQL_SERVICE_PASSWORD=123456 </span>
<span class="token comment">#-e MYSQL_SERVICE_DB_NAME=nacos </span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_XMS</span><span class="token operator">=</span>256m <span class="token comment">#jvm启动时分配的内存</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">JVM_XMX</span><span class="token operator">=</span>256m <span class="token comment">#为jvm运行过程中分配的最大内存</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MODE</span><span class="token operator">=</span>standalone <span class="token comment">#单机模式</span>
<span class="token comment">#一下四个环境变量使用鉴权必须都配置</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">NACOS_AUTH_CACHE_ENABLE</span><span class="token operator">=</span>true <span class="token comment">#开启权限系统</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">NACOS_AUTH_IDENTITY_KEY</span><span class="token operator">=</span>admin    <span class="token comment">#不配置nacos报错  配置了不生效 账号还是nacos(真离谱)</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">NACOS_AUTH_IDENTITY_VALUE</span><span class="token operator">=</span>admin  <span class="token comment">#不配置nacos报错  配置了不生效 密码还是nacos(真离谱)</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">NACOS_AUTH_TOKEN</span><span class="token operator">=</span>SecretKey012345678901234567890123456789012345678901234567890123456789
<span class="token comment">#-v /home/gaoyang/docker/nacos/logs:/home/nacos/logs</span>
<span class="token parameter variable">-d</span> nacos/nacos-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>进入容器终端开启鉴权</li></ol><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">nacos.core.auth.enabled</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>检查容器是否正确运行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token function">ps</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,42),r=[i];function c(o,t){return s(),n("div",null,r)}const m=a(l,[["render",c],["__file","Docker配置本地开发环境.html.vue"]]);export{m as default};
