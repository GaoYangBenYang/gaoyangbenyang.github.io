const e=JSON.parse(`{"key":"v-9447b7ca","path":"/Blog/Golang%E4%B8%ADhttp.ListenAndServe%E9%98%BB%E5%A1%9E%E5%AF%BC%E8%87%B4if-else%E4%B8%8D%E6%89%A7%E8%A1%8C%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.html","title":"Golang中http.ListenAndServe阻塞导致if-else不执行问题分析","lang":"zh-CN","frontmatter":{"title":"Golang中http.ListenAndServe阻塞导致if-else不执行问题分析","date":"2023-09-25T00:00:00.000Z","category":["Goalng"],"tag":["问题分析"],"sticky":true,"star":true,"pageInfo":["Author","Date","ReadingTime","Word","Category","Tag"],"prev":"基于角色访问控制(Role-Based Access Control)模型.md","next":"Golang读取配置文件处理方式.md","description":"问题代码 简单的代码，你可能很难发现其中的错误： err := http.ListenAndServe(\\":8000\\", nil) if err != nil { log.Println(\\"ListenAndServe: \\", err) } else { log.Println(\\"服务器启动,监听8000端口: \\") }","head":[["meta",{"property":"og:url","content":"https://gaoyangbenyang.github.io/Blog/Golang%E4%B8%ADhttp.ListenAndServe%E9%98%BB%E5%A1%9E%E5%AF%BC%E8%87%B4if-else%E4%B8%8D%E6%89%A7%E8%A1%8C%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"GaoYang's blog"}],["meta",{"property":"og:title","content":"Golang中http.ListenAndServe阻塞导致if-else不执行问题分析"}],["meta",{"property":"og:description","content":"问题代码 简单的代码，你可能很难发现其中的错误： err := http.ListenAndServe(\\":8000\\", nil) if err != nil { log.Println(\\"ListenAndServe: \\", err) } else { log.Println(\\"服务器启动,监听8000端口: \\") }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-26T15:09:42.000Z"}],["meta",{"property":"article:author","content":"GaoYang"}],["meta",{"property":"article:tag","content":"问题分析"}],["meta",{"property":"article:published_time","content":"2023-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-26T15:09:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Golang中http.ListenAndServe阻塞导致if-else不执行问题分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-26T15:09:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"GaoYang\\",\\"url\\":\\"https://github.com/GaoYangBenYang\\",\\"email\\":\\"GaoYangBenYang@outlook.com\\"}]}"]]},"headers":[{"level":2,"title":"问题代码","slug":"问题代码","link":"#问题代码","children":[]},{"level":2,"title":"问题原因","slug":"问题原因","link":"#问题原因","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"createdTime":1695714752000,"updatedTime":1695740982000,"contributors":[{"name":"GaoYang","email":"GaoYangBenYang@outlook.com","commits":2}]},"readingTime":{"minutes":1.48,"words":443},"filePathRelative":"Blog/Golang中http.ListenAndServe阻塞导致if-else不执行问题分析.md","localizedDate":"2023年9月25日","excerpt":"<h2> 问题代码</h2>\\n<blockquote>\\n<p>简单的代码，你可能很难发现其中的错误：</p>\\n</blockquote>\\n<div class=\\"language-golang line-numbers-mode\\" data-ext=\\"golang\\"><pre class=\\"language-golang\\"><code>err := http.ListenAndServe(\\":8000\\", nil)\\nif err != nil {\\n  log.Println(\\"ListenAndServe: \\", err)\\n} else {\\n  log.Println(\\"服务器启动,监听8000端口: \\")\\n}\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
